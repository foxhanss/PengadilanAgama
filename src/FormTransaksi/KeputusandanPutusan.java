/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package FormTransaksi;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.StandardCopyOption;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JFileChooser;
import javax.swing.table.DefaultTableModel;
import koneksi.koneksi;

/**
 *
 * @author T480
 */
public class KeputusandanPutusan extends javax.swing.JInternalFrame {
    Connection conn = null;
    File fileTerpilih;
    /**
     * Creates new form KeputusandanPutusan
     */
    public KeputusandanPutusan() {
        initComponents();
        isiComboJenisPerkara();
        tampilDataTabel();
        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabel_putusan = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        cari = new javax.swing.JTextField();
        btnCari = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jenis_perkara = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        id_perkara = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        tanggal_putusan = new com.toedter.calendar.JDateChooser();
        jLabel4 = new javax.swing.JLabel();
        jenis_putusan = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        ringkasan_putusan = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();
        salinan_putusan = new javax.swing.JTextField();
        salinan = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 102, 0));
        jPanel1.setPreferredSize(new java.awt.Dimension(969, 1019));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 40)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 153, 0));
        jLabel1.setText("KEPUTUSAN & PUTUSAN");

        btnSave.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/src/image/save.png"))); // NOI18N
        btnSave.setText("SAVE");
        btnSave.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnClear.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        btnClear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/src/image/clear.png"))); // NOI18N
        btnClear.setText("CLEAR");
        btnClear.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        tabel_putusan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID Perkara", "Jenis Perkara", "Tanggal Putusan", "Jenis Putusan", "Ringkasan Putusan", "Salinan Putusan"
            }
        ));
        jScrollPane2.setViewportView(tabel_putusan);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 153, 0));
        jLabel8.setText("Kata Kunci Pencarian");

        cari.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N

        btnCari.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        btnCari.setIcon(new javax.swing.ImageIcon(getClass().getResource("/src/image/search.png"))); // NOI18N
        btnCari.setText("Cari");
        btnCari.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCariActionPerformed(evt);
            }
        });

        btnEdit.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        btnEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/src/image/edit.png"))); // NOI18N
        btnEdit.setText("EDIT");
        btnEdit.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnDelete.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/src/image/delete.png"))); // NOI18N
        btnDelete.setText("DELETE");
        btnDelete.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(0, 153, 0));

        jPanel2.setBackground(new java.awt.Color(255, 153, 0));
        jPanel2.setPreferredSize(new java.awt.Dimension(261, 60));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 25)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Informasi Putusan Perkara");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel9)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(16, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addContainerGap())
        );

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Jenis Perkara");

        jenis_perkara.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jenis_perkara.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jenis_perkaraActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("--");

        id_perkara.setEditable(false);
        id_perkara.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Tanggal Putusan");

        tanggal_putusan.setBackground(new java.awt.Color(0, 153, 0));
        tanggal_putusan.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Jenis Putusan");

        jenis_putusan.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jenis_putusan.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Dikabulkan", "Ditolak", "Gugur" }));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Ringkasan Putusan");

        ringkasan_putusan.setColumns(20);
        ringkasan_putusan.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        ringkasan_putusan.setRows(5);
        jScrollPane3.setViewportView(ringkasan_putusan);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Salinan Putusan");

        salinan_putusan.setEditable(false);
        salinan_putusan.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N

        salinan.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        salinan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/src/image/folder-1485.png"))); // NOI18N
        salinan.setText("Browse...");
        salinan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salinanActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 880, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3)
                    .addComponent(jLabel6))
                .addGap(55, 55, 55)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                            .addComponent(salinan_putusan)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(salinan))
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jenis_putusan, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(tanggal_putusan, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jenis_perkara, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(17, 17, 17)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(id_perkara, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(327, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jenis_perkara, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addComponent(id_perkara, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addComponent(jLabel5))
                    .addComponent(tanggal_putusan, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jenis_putusan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(salinan_putusan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(salinan))
                .addGap(0, 56, Short.MAX_VALUE))
        );

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 153, 0));
        jLabel10.setText("TABEL KEPUTUSAN & PUTUSAN");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(342, 342, 342)
                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel8)
                            .addGap(18, 18, 18)
                            .addComponent(cari, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(btnCari, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(65, 65, 65)
                            .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jLabel1)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane2)))
                .addGap(64, 64, 64))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(btnEdit, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(cari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnCari, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(194, Short.MAX_VALUE))
        );

        jScrollPane1.setViewportView(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 969, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void pilihFilePutusan() {
    JFileChooser fileChooser = new JFileChooser();
    int hasil = fileChooser.showOpenDialog(this);
    if (hasil == JFileChooser.APPROVE_OPTION) {
        fileTerpilih = fileChooser.getSelectedFile();
        salinan_putusan.setText(fileTerpilih.getAbsolutePath()); // tampilkan path di JTextField
    } else {
        JOptionPane.showMessageDialog(null, "Tidak ada file yang dipilih.");
    }
    }
    
    private void tampilkanIDPerkaraBerdasarkanJenis() {
    try {
        String jenis = (String) jenis_perkara.getSelectedItem();
        String sql = "SELECT id_perkara FROM jenis_perkara WHERE jenis_perkara = ?";
        Connection conn = koneksi.getConnection();
        PreparedStatement pst = conn.prepareStatement(sql);
        pst.setString(1, jenis);
        ResultSet rs = pst.executeQuery();

        if (rs.next()) {
            id_perkara.setText(rs.getString("id_perkara"));
        } else {
            id_perkara.setText("");
        }

    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Gagal menampilkan ID Perkara: " + e.getMessage());
    }
}


    
    private void isiComboJenisPerkara() {
    try {
        String sql = "SELECT jenis_perkara FROM jenis_perkara";
        Connection conn = koneksi.getConnection();
        Statement st = conn.createStatement();
        ResultSet rs = st.executeQuery(sql);
        jenis_perkara.removeAllItems();
        while (rs.next()) {
            jenis_perkara.addItem(rs.getString("jenis_perkara"));
        }
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Gagal Load Jenis Perkara: " + e.getMessage());
    }
    }


    
    private void tampilDataTabel() {
    DefaultTableModel model = new DefaultTableModel();
    model.addColumn("ID Putusan");
    model.addColumn("ID Perkara");
    model.addColumn("Jenis Perkara");
    model.addColumn("Tanggal Putusan");
    model.addColumn("Jenis Putusan");
    model.addColumn("Ringkasan");
    model.addColumn("Nama File");

    try {
        String sql = "SELECT id_putusan, id_perkara, jenis_perkara, tanggal_putusan, jenis_putusan, ringkasan, nama_file FROM putusan";
        Connection conn = koneksi.getConnection();
        Statement st = conn.createStatement();
        ResultSet rs = st.executeQuery(sql);

        while (rs.next()) {
            model.addRow(new Object[]{
                rs.getString("id_putusan"),
                rs.getString("id_perkara"),
                rs.getString("jenis_perkara"),
                rs.getString("tanggal_putusan"),
                rs.getString("jenis_putusan"),
                rs.getString("ringkasan"),
                rs.getString("nama_file")
            });
        }
        
        tabel_putusan.setModel(model);

    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Gagal menampilkan data putusan: " + e.getMessage());
    }
}


    private void simpanDataPutusan() {
    try {
        Connection conn = koneksi.getConnection();
        String sql = "INSERT INTO putusan (id_perkara, jenis_perkara, tanggal_putusan, jenis_putusan, ringkasan, salinan_file, nama_file) VALUES (?, ?, ?, ?, ?, ?, ?)";
        PreparedStatement pst = conn.prepareStatement(sql);

        // Ambil data dari komponen input
        String idPerkara = id_perkara.getText(); // NON-editable
        String jenisPerkara = (String) jenis_perkara.getSelectedItem();
        String jenisPutusan = (String) jenis_putusan.getSelectedItem();
        String ringkasan = ringkasan_putusan.getText();

        // Format tanggal putusan
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        String tanggal = sdf.format(tanggal_putusan.getDate());

        pst.setString(1, idPerkara);
        pst.setString(2, jenisPerkara);
        pst.setString(3, tanggal);
        pst.setString(4, jenisPutusan);
        pst.setString(5, ringkasan);

        // Salinan file opsional
        File file = new File(salinan_putusan.getText());
        if (!salinan_putusan.getText().isEmpty() && file.exists()) {
            FileInputStream fis = new FileInputStream(file);
            pst.setBinaryStream(6, fis, (int) file.length());
            pst.setString(7, file.getName());

            // Simpan juga ke folder lokal
            File folderTujuan = new File("folder_salinan");
            if (!folderTujuan.exists()) folderTujuan.mkdirs();
            Files.copy(file.toPath(), new File(folderTujuan, file.getName()).toPath(), StandardCopyOption.REPLACE_EXISTING);
        } else {
            pst.setNull(6, java.sql.Types.BLOB);
            pst.setNull(7, java.sql.Types.VARCHAR);
        }

        pst.executeUpdate();
        JOptionPane.showMessageDialog(this, "Data berhasil disimpan.");
        clearForm();
        tampilDataTabel();

    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Gagal menyimpan data: " + e.getMessage());
    } catch (IOException ex) {
        JOptionPane.showMessageDialog(this, "Gagal menyimpan file lokal: " + ex.getMessage());
    }
}



    private void clearForm() {
    jenis_perkara.setSelectedIndex(0);
    id_perkara.setText("");
    tanggal_putusan.setDate(null);
    jenis_putusan.setSelectedIndex(0);
    ringkasan_putusan.setText("");
    salinan_putusan.setText("");
    tabel_putusan.clearSelection();
}

    private void updateDataPutusan() {
    int selectedRow = tabel_putusan.getSelectedRow();
    if (selectedRow != -1) {
        // Ambil ID Putusan dari kolom terakhir (misalnya kolom ke-5 jika kolom ke-0 sampai ke-4 data user)
        String id_putusan = tabel_putusan.getValueAt(selectedRow, 0).toString(); // Sesuaikan index

        List<String> fields = new ArrayList<>();
        List<Object> values = new ArrayList<>();

        if (jenis_perkara.getSelectedItem() != null) {
            fields.add("jenis_perkara=?");
            values.add(jenis_perkara.getSelectedItem().toString());

            // Cari id_perkara berdasarkan jenis_perkara yang dipilih
            try {
                String sqlCari = "SELECT id_perkara FROM jenis_perkara WHERE jenis_perkara=?";
                PreparedStatement pstCari = koneksi.getConnection().prepareStatement(sqlCari);
                pstCari.setString(1, jenis_perkara.getSelectedItem().toString());
                ResultSet rs = pstCari.executeQuery();
                if (rs.next()) {
                    fields.add("id_perkara=?");
                    values.add(rs.getString("id_perkara"));
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Gagal mengambil ID Perkara: " + ex.getMessage());
            }
        }


        if (tanggal_putusan.getDate() != null) {
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            fields.add("tanggal_putusan=?");
            values.add(sdf.format(tanggal_putusan.getDate()));
        }

        if (jenis_putusan.getSelectedItem() != null) {
            fields.add("jenis_putusan=?");
            values.add(jenis_putusan.getSelectedItem().toString());
        }

        if (!ringkasan_putusan.getText().isEmpty()) {
            fields.add("ringkasan=?");
            values.add(ringkasan_putusan.getText());
        }

        File file = new File(salinan_putusan.getText());
        boolean fileValid = !salinan_putusan.getText().isEmpty() && file.exists();

        if (fileValid) {
            try {
                FileInputStream fis = new FileInputStream(file);
                fields.add("salinan_file=?");
                values.add(fis);
                fields.add("nama_file=?");
                values.add(file.getName());

                File folderTujuan = new File("folder_salinan");
                if (!folderTujuan.exists()) folderTujuan.mkdirs();
                Files.copy(file.toPath(), new File(folderTujuan, file.getName()).toPath(), StandardCopyOption.REPLACE_EXISTING);
            } catch (IOException e) {
                JOptionPane.showMessageDialog(this, "Gagal menyimpan file lokal: " + e.getMessage());
                return;
            }
        }

        if (fields.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Tidak ada data yang diubah.");
            return;
        }

        try {
            String sql = "UPDATE putusan SET " + String.join(", ", fields) + " WHERE id_putusan=?";
            Connection conn = koneksi.getConnection();
            PreparedStatement pst = conn.prepareStatement(sql);

            int i = 0;
            for (; i < values.size(); i++) {
                Object val = values.get(i);
                if (val instanceof FileInputStream) {
                    pst.setBinaryStream(i + 1, (FileInputStream) val, (int) file.length());
                } else {
                    pst.setObject(i + 1, val);
                }
            }

            pst.setString(i + 1, id_putusan);
            int hasil = pst.executeUpdate();

            if (hasil > 0) {
                JOptionPane.showMessageDialog(this, "Data berhasil diperbarui.");
                clearForm();
                tampilDataTabel();
            } else {
                JOptionPane.showMessageDialog(this, "Data gagal diperbarui. Periksa ID Putusan.");
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Gagal update: " + e.getMessage());
        }

    } else {
        JOptionPane.showMessageDialog(this, "Pilih data dari tabel terlebih dahulu.");
    }
}

    
    private void hapusDataPutusan() {
    int selectedRow = tabel_putusan.getSelectedRow();
    if (selectedRow != -1) {
        String id_perkara_hapus = tabel_putusan.getValueAt(selectedRow, 0).toString();

        int konfirmasi = JOptionPane.showConfirmDialog(this, "Yakin ingin menghapus data ini?", "Konfirmasi", JOptionPane.YES_NO_OPTION);
        if (konfirmasi == JOptionPane.YES_OPTION) {
            try {
                Connection conn = koneksi.getConnection();
                String sql = "DELETE FROM putusan WHERE id_perkara=?";
                PreparedStatement pst = conn.prepareStatement(sql);
                pst.setString(1, id_perkara_hapus);
                pst.executeUpdate();

                JOptionPane.showMessageDialog(this, "Data berhasil dihapus.");
                clearForm();
                tampilDataTabel();
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(this, "Gagal menghapus data: " + e.getMessage());
            }
        }
    } else {
        JOptionPane.showMessageDialog(this, "Pilih data yang ingin dihapus.");
    }
}

    private void cariDataPutusan() {
    String keyword = cari.getText();
    DefaultTableModel model = (DefaultTableModel) tabel_putusan.getModel();
    model.setRowCount(0); // Kosongkan tabel

    try {
        Connection conn = koneksi.getConnection();
        String sql = "SELECT * FROM putusan WHERE id_perkara LIKE ? OR jenis_perkara LIKE ? OR jenis_putusan LIKE ?";
        PreparedStatement pst = conn.prepareStatement(sql);
        String likeKeyword = "%" + keyword + "%";
        pst.setString(1, likeKeyword);
        pst.setString(2, likeKeyword);
        pst.setString(3, likeKeyword);

        ResultSet rs = pst.executeQuery();
        while (rs.next()) {
            model.addRow(new Object[]{
                rs.getString("id_perkara"),
                rs.getString("jenis_perkara"),
                rs.getString("tanggal_putusan"),
                rs.getString("jenis_putusan"),
                rs.getString("ringkasan"),
                rs.getString("nama_file")
            });
        }

    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Gagal mencari data: " + e.getMessage());
    }
}
    

    
    private void salinanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salinanActionPerformed
        pilihFilePutusan();
// TODO add your handling code here:
    }//GEN-LAST:event_salinanActionPerformed

    private void jenis_perkaraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jenis_perkaraActionPerformed
        tampilkanIDPerkaraBerdasarkanJenis();
// TODO add your handling code here:
    }//GEN-LAST:event_jenis_perkaraActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        simpanDataPutusan();
// TODO add your handling code here:
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        clearForm();
// TODO add your handling code here:
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCariActionPerformed
        cariDataPutusan();
// TODO add your handling code here:
    }//GEN-LAST:event_btnCariActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        updateDataPutusan();
// TODO add your handling code here:
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        hapusDataPutusan();
// TODO add your handling code here:
    }//GEN-LAST:event_btnDeleteActionPerformed

    


    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(KeputusandanPutusan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(KeputusandanPutusan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(KeputusandanPutusan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(KeputusandanPutusan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new KeputusandanPutusan().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCari;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnSave;
    private javax.swing.JTextField cari;
    private javax.swing.JTextField id_perkara;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JComboBox<String> jenis_perkara;
    private javax.swing.JComboBox<String> jenis_putusan;
    private javax.swing.JTextArea ringkasan_putusan;
    private javax.swing.JButton salinan;
    private javax.swing.JTextField salinan_putusan;
    private javax.swing.JTable tabel_putusan;
    private com.toedter.calendar.JDateChooser tanggal_putusan;
    // End of variables declaration//GEN-END:variables
}
