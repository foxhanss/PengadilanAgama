/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package FormTransaksi;

import koneksi.koneksi; 
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.util.List;
import java.util.ArrayList;
/**
 *
 * @author T480
 */
public class PendaftaranPerkara extends javax.swing.JInternalFrame {
    Connection conn = null;
    /**
     * Creates new form PendaftaranPerkara
     */
    public PendaftaranPerkara() {
        initComponents();
        isiComboJenisPerkara();
        isiComboIDPerkara();
        isiComboIDPenggugat();
        isiComboIDTergugat();
        tampilDataTabel();
        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        id_perkara = new javax.swing.JComboBox<>();
        jenis_perkara = new javax.swing.JComboBox<>();
        id_penggugat = new javax.swing.JComboBox<>();
        status_perkara = new javax.swing.JComboBox<>();
        tanggal = new com.toedter.calendar.JDateChooser();
        biaya = new javax.swing.JTextField();
        status_pembayaran = new javax.swing.JComboBox<>();
        btnSave = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabel_perkara = new javax.swing.JTable();
        cari = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        btnCari = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        id_tergugat = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel1.setText("Pendaftaran Perkara");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel2.setText("ID Perkara");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel3.setText("Jenis Perkara");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel4.setText("ID Penggugat");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel5.setText("Tanggal Pendaftaran");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel6.setText("Status Perkara");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel7.setText("Rincian Biaya Perkara");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel8.setText("Status Pembayaran");

        id_perkara.setEditable(true);
        id_perkara.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N

        jenis_perkara.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jenis_perkara.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jenis_perkaraActionPerformed(evt);
            }
        });

        id_penggugat.setEditable(true);
        id_penggugat.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N

        status_perkara.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        status_perkara.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Dalam Proses", "Selesai" }));

        biaya.setEditable(false);
        biaya.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N

        status_pembayaran.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        status_pembayaran.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Belum Lunas", "Lunas" }));

        btnSave.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        btnSave.setText("SAVE");
        btnSave.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnClear.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        btnClear.setText("CLEAR");
        btnClear.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        tabel_perkara.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID Perkara", "Jenis Perkara", "ID Penggugat", "ID Tergugat", "Tanggal Pendaftaran", "Status Perkara  ", "Biaya", "Status Pembayaran  "
            }
        ));
        jScrollPane1.setViewportView(tabel_perkara);

        cari.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel9.setText("Kata Kunci Pencarian");

        btnCari.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        btnCari.setText("Cari");
        btnCari.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCariActionPerformed(evt);
            }
        });

        btnEdit.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        btnEdit.setText("EDIT");
        btnEdit.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnDelete.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        btnDelete.setText("DELETE");
        btnDelete.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel10.setText("ID Tergugat");

        id_tergugat.setEditable(true);
        id_tergugat.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addGap(28, 28, 28)
                                .addComponent(cari, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnCari, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(36, 36, 36)
                                .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel1)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel2)
                                        .addComponent(jLabel3)
                                        .addComponent(jLabel4)
                                        .addComponent(jLabel10))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(id_perkara, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jenis_perkara, javax.swing.GroupLayout.Alignment.LEADING, 0, 208, Short.MAX_VALUE)
                                        .addComponent(id_tergugat, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(id_penggugat, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel5)
                                        .addComponent(jLabel6)
                                        .addComponent(jLabel7)
                                        .addComponent(jLabel8))
                                    .addGap(91, 91, 91)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(status_perkara, 0, 208, Short.MAX_VALUE)
                                        .addComponent(biaya)
                                        .addComponent(status_pembayaran, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(tanggal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 905, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(214, 214, 214)
                        .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45)
                        .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel1)
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(id_perkara, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jenis_perkara, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(id_penggugat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(id_tergugat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addComponent(tanggal, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(status_perkara, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(biaya, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(status_pembayaran, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(btnCari, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(78, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void isiComboIDPerkara() {
    try {
        String sql = "SELECT id_perkara FROM jenis_perkara";
        Connection conn = koneksi.getConnection();
        Statement st = conn.createStatement();
        ResultSet rs = st.executeQuery(sql);
        id_perkara.removeAllItems();
        while (rs.next()) {
            id_perkara.addItem(rs.getString("id_perkara"));
        }
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Gagal Load ID Perkara: " + e.getMessage());
    }
    }
    
    private void isiComboJenisPerkara() {
    try {
        String sql = "SELECT jenis_perkara FROM jenis_perkara";
        Connection conn = koneksi.getConnection();
        Statement st = conn.createStatement();
        ResultSet rs = st.executeQuery(sql);
        jenis_perkara.removeAllItems();
        while (rs.next()) {
            jenis_perkara.addItem(rs.getString("jenis_perkara"));
        }
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Gagal Load Jenis Perkara: " + e.getMessage());
    }
    }
    
    private void isiComboIDPenggugat() {
    try {
        String sql = "SELECT id_penggugat FROM penggugat";
        Connection conn = koneksi.getConnection();
        Statement st = conn.createStatement();
        ResultSet rs = st.executeQuery(sql);
        id_penggugat.removeAllItems();
        while (rs.next()) {
            id_penggugat.addItem(rs.getString("id_penggugat"));
        }
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Gagal Load ID Penggugat: " + e.getMessage());
    }
    }
    
    private void isiComboIDTergugat() {
    try {
        String sql = "SELECT id_tergugat FROM tergugat";
        Connection conn = koneksi.getConnection();
        Statement st = conn.createStatement();
        ResultSet rs = st.executeQuery(sql);
        id_tergugat.removeAllItems();
        while (rs.next()) {
            id_tergugat.addItem(rs.getString("id_tergugat"));
        }
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Gagal Load ID Terggugat: " + e.getMessage());
    }
    }

    public void tampilDataTabel() {
    DefaultTableModel model = new DefaultTableModel();
    model.addColumn("ID Perkara");
    model.addColumn("Jenis Perkara");
    model.addColumn("ID Penggugat");
    model.addColumn("ID Tergugat");
    model.addColumn("Tanggal");
    model.addColumn("Status Perkara");
    model.addColumn("Biaya");
    model.addColumn("Status Pembayaran");

    try {
        String sql = "SELECT * FROM pendaftaran_perkara";
        Connection conn = koneksi.getConnection();
        Statement st = conn.createStatement();
        ResultSet rs = st.executeQuery(sql);

        while (rs.next()) {
            model.addRow(new Object[]{
                rs.getString("id_perkara"),
                rs.getString("jenis_perkara"),
                rs.getString("id_penggugat"),
                rs.getString("id_tergugat"),
                rs.getString("tanggal"),
                rs.getString("status_perkara"),
                rs.getString("biaya"),
                rs.getString("status_pembayaran")
            });
        }

        tabel_perkara.setModel(model);
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Gagal Menampilkan Data: " + e.getMessage());
    }
    }

    private void clearForm() {
    id_perkara.setSelectedItem(null);
    jenis_perkara.setSelectedItem(null);
    id_penggugat.setSelectedItem(null);
    id_tergugat.setSelectedItem(null);
    tanggal.setDate(null);
    status_perkara.setSelectedItem(null);
    biaya.setText("");
    status_pembayaran.setSelectedItem(null);
    }


    
    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        try {
        String sql = "DELETE FROM pendaftaran_perkara WHERE id_perkara=?";
        Connection conn = koneksi.getConnection();
        PreparedStatement pst = conn.prepareStatement(sql);
        pst.setString(1, id_perkara.getSelectedItem().toString());
        pst.executeUpdate();
        JOptionPane.showMessageDialog(null, "Data berhasil dihapus!");
        tampilDataTabel();
        clearForm();
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Gagal hapus: " + e.getMessage());
    }
// TODO add your handling code here:
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        clearForm();
// TODO add your handling code here:
    }//GEN-LAST:event_btnClearActionPerformed

    private void jenis_perkaraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jenis_perkaraActionPerformed
    try {
        String selectedJenis = jenis_perkara.getSelectedItem().toString();
        String sql = "SELECT biaya FROM jenis_perkara WHERE jenis_perkara=?";
        Connection conn = koneksi.getConnection();
        PreparedStatement pst = conn.prepareStatement(sql);
        pst.setString(1, selectedJenis);
        ResultSet rs = pst.executeQuery();
        if (rs.next()) {
            biaya.setText(rs.getString("biaya"));
        }
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Gagal mengambil biaya: " + e.getMessage());
    }

// TODO add your handling code here:
    }//GEN-LAST:event_jenis_perkaraActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
       try {
        String sql = "INSERT INTO pendaftaran_perkara VALUES (?, ?, ?, ?, ?, ?, ?, ?)";
        Connection conn = koneksi.getConnection();
        PreparedStatement pst = conn.prepareStatement(sql);
        pst.setString(1, id_perkara.getSelectedItem().toString());
        pst.setString(2, jenis_perkara.getSelectedItem().toString());
        pst.setString(3, id_penggugat.getSelectedItem().toString());
        pst.setString(4, id_tergugat.getSelectedItem().toString());
        pst.setString(5, new SimpleDateFormat("yyyy-MM-dd").format(tanggal.getDate()));
        pst.setString(6, status_perkara.getSelectedItem().toString());
        pst.setString(7, biaya.getText());
        pst.setString(8, status_pembayaran.getSelectedItem().toString());
        pst.executeUpdate();
        JOptionPane.showMessageDialog(null, "Data berhasil disimpan!");
        clearForm();
        tampilDataTabel();
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Gagal simpan: " + e.getMessage());
    }
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCariActionPerformed
    String keyword = cari.getText();
    DefaultTableModel model = new DefaultTableModel();
    model.addColumn("ID Perkara");
    model.addColumn("Jenis Perkara");
    model.addColumn("ID Penggugat");
    model.addColumn("ID Tergugat");
    model.addColumn("Tanggal Pendaftaran");
    model.addColumn("Status Perkara");
    model.addColumn("Biaya");
    model.addColumn("Status Pembayaran");
    try {
        String sql = "SELECT * FROM pendaftaran_perkara WHERE "
                   + "jenis_perkara LIKE ? OR "
                   + "id_penggugat LIKE ? OR "
                   + "id_tergugat LIKE ? OR "
                   + "tanggal LIKE ? OR "
                   + "status_perkara LIKE ? OR "
                   + "biaya LIKE ? OR "
                   + "status_pembayaran LIKE ?";
        Connection conn = koneksi.getConnection();
        PreparedStatement pst = conn.prepareStatement(sql);
        for (int i = 1; i <= 7; i++) {
            pst.setString(i, "%" + keyword + "%");
        }

        ResultSet rs = pst.executeQuery();
        while (rs.next()) {
            model.addRow(new Object[]{
                rs.getString("id_perkara"),
                rs.getString("jenis_perkara"),
                rs.getString("id_penggugat"),
                rs.getString("id_tergugat"),
                rs.getString("tanggal"),
                rs.getString("status_perkara"),
                rs.getString("biaya"),
                rs.getString("status_pembayaran")
            });
        }

        tabel_perkara.setModel(model);
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Pencarian gagal: " + e.getMessage());
    }
        // TODO add your handling code here:
    }//GEN-LAST:event_btnCariActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
    int selectedRow = tabel_perkara.getSelectedRow();
    if (selectedRow != -1) {
        String id = tabel_perkara.getValueAt(selectedRow, 0).toString(); 
        List<String> fields = new ArrayList<>();
        List<Object> values = new ArrayList<>();
        if (jenis_perkara.getSelectedItem() != null) {
            fields.add("jenis_perkara=?");
            values.add(jenis_perkara.getSelectedItem().toString());
        }
        if (id_penggugat.getSelectedItem() != null) {
            fields.add("id_penggugat=?");
            values.add(id_penggugat.getSelectedItem().toString());
        }
        if (id_tergugat.getSelectedItem() != null) {
            fields.add("id_tergugat=?");
            values.add(id_tergugat.getSelectedItem().toString());
        }
        if (tanggal.getDate() != null) {
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            String tanggalFormatted = sdf.format(tanggal.getDate());
            fields.add("tanggal=?");
            values.add(tanggalFormatted);
        }
        if (status_perkara.getSelectedItem() != null) {
            fields.add("status_perkara=?");
            values.add(status_perkara.getSelectedItem().toString());
        }
        if (!biaya.getText().isEmpty()) {
            try {
                int nilaiBiaya = Integer.parseInt(biaya.getText());
                fields.add("biaya=?");
                values.add(nilaiBiaya);
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Biaya harus berupa angka.");
                return;
            }
        }
        if (status_pembayaran.getSelectedItem() != null) {
            fields.add("status_pembayaran=?");
            values.add(status_pembayaran.getSelectedItem().toString());
        }

        if (fields.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Tidak ada data yang diubah.");
            return;
        }

        try {
            String sql = "UPDATE pendaftaran_perkara SET " + String.join(", ", fields) + " WHERE id_perkara=?";
            System.out.println("SQL: " + sql); // Debug
            Connection conn = koneksi.getConnection();
            PreparedStatement pst = conn.prepareStatement(sql);

            for (int i = 0; i < values.size(); i++) {
                pst.setObject(i + 1, values.get(i));
            }

            pst.setString(values.size() + 1, id); // ID untuk WHERE
            pst.executeUpdate();

            JOptionPane.showMessageDialog(this, "Data berhasil diperbarui.");
            clearForm();
            tampilDataTabel();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Gagal update data: " + e.getMessage());
        }
    } else {
        JOptionPane.showMessageDialog(this, "Pilih baris data yang ingin diedit.");
    }
// TODO add your handling code here:
    }//GEN-LAST:event_btnEditActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PendaftaranPerkara.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PendaftaranPerkara.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PendaftaranPerkara.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PendaftaranPerkara.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PendaftaranPerkara().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField biaya;
    private javax.swing.JButton btnCari;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnSave;
    private javax.swing.JTextField cari;
    private javax.swing.JComboBox<String> id_penggugat;
    private javax.swing.JComboBox<String> id_perkara;
    private javax.swing.JComboBox<String> id_tergugat;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> jenis_perkara;
    private javax.swing.JComboBox<String> status_pembayaran;
    private javax.swing.JComboBox<String> status_perkara;
    private javax.swing.JTable tabel_perkara;
    private com.toedter.calendar.JDateChooser tanggal;
    // End of variables declaration//GEN-END:variables
}
